<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.data.dao.TableDataDAO">

    <sql id="orderCondition">
        order by
            tn.id desc
    </sql>

    <select id="findListByQuery" resultType="java.util.HashMap"  parameterType="TableDataQO">
        select
        <foreach collection="columnsArray" item="item" index="index" open=" " separator=", " close=" " >
            ${item}
        </foreach>
        from   ${tableName}   tn
        limit ${startIndex},${pageSize}
    </select>


    <select id="queryTableDataByCondition" resultType="java.util.HashMap"   parameterType="TableDataQO">
        select
        <foreach collection="columnsArray" item="item" index="index" open=" " separator=", " close=" " >
            ${item}
        </foreach>
        from   ${tableName}   tn
        <where>
            <foreach collection="conditionMap" index="key" item="value" separator="and" >
                tn.${key} =  #{value.values,jdbcType=${value.type}}
            </foreach>
        </where>
    </select>

    <insert  id="insertData"  parameterType="java.util.Map" >
        insert into ${tableName}  (
        <foreach collection="tableDataMap" item="value" index="key" separator=",">
            ${key}
        </foreach>
        )
            VALUES
        <foreach collection="tableDataMap" index="key" item="value"   open="( "   separator=","  close=")"  >
            #{value.values,jdbcType=${value.type}}
        </foreach>
    </insert>

    <update  id="updateHashForData"  parameterType="java.util.Map" >
        update ${tableName} set
        hash=#{hash,jdbcType=VARCHAR}
        where id=#{id,jdbcType=INTEGER}

    </update>

    <delete id="deleteData"   parameterType="TableDataQO">
        delete from ${tableName}
        <where>
            <foreach collection="conditionMap" index="key" item="value" separator="and" >
                ${key} =  #{value.values,jdbcType=${value.type}}
            </foreach>
        </where>
    </delete>

</mapper>
